spring:
  application:
    name: book-transfers-service
  config:
    import: "optional:configserver:"
  cloud:
    config:
      discovery:
        enabled: true
        service-id: payment-config-server
      fail-fast: true
      username: configUser
      password: configPassword
  jms:
    listener:
      concurrency: 5
      max-concurrency: 10
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

management:
  tracing:
    sampling:
      probability: 1.0
    logging:
      enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://eurekaUser:eurekaPassword@localhost:8761/eureka/

# Business process configuration is preserved
service-config:
  journeys:
    PAYMENT_SUBMIT_V1:
      idempotencyEnabled: true
      policies:
        - "stateTransitionPolicy"
    PAYMENT_SUBMIT_V2_SYNC:
      idempotencyEnabled: true
      policies:
        - "stateTransitionPolicy"
    PAYMENT_SUBMIT_V2_ASYNC:
      idempotencyEnabled: false
      policies:
        - "stateTransitionPolicy"

logging:
  level:
    tech: debug
    dexter.banking.booktransfers.infrastructure.middleware: debug
    dexter.banking.booktransfers.core.usecase: info
    org.springframework.transaction.event: warn